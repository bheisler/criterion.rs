sudo: false
language: rust

matrix:
  include:
    - name: "linux - stable rust - without gnuplot"
      os: linux
      rust: stable
    - name: "linux - nightly rust - without gnuplot"
      os: linux
      rust: nightly
    - name: "linux - stable rust - with gnuplot"
      os: linux
      addons: &gnuplot
        apt:
          packages:
            - gnuplot
    - name: "linux - nightly rust - with gnuplot"
      os: linux
      rust: nightly
      addons: *gnuplot
    - name: "linux - stable rust 1.28.0 - with gnuplot"
      os: linux
      rust: 1.28.0
      addons: *gnuplot
    - name: "linux - stable rust 1.28.0 - with gnuplot, no HTML reports"
      os: linux
      env: BUILD_ARGS="--no-default-features" # Disables HTML reports
      rust: 1.28.0
      addons: *gnuplot
    - name: "clippy"
      os: linux
      rust: nightly-2018-09-18
      before_install: rustup component add clippy-preview
      script: cargo clippy -- -D clippy::pedantic
    - name: "rustfmt"
      os: linux
      rust: nightly-2018-09-18
      before_install: rustup component add rustfmt-preview
      script: cargo fmt --all -- --check
    - name: "Documentation"
      rust: stable
      os: linux
      install:
        - pip install 'travis-cargo<0.2' --user;
        - export PATH=$HOME/.local/bin:$PATH;
        - cargo install mdbook --force
      script:
        - cargo doc --all --no-deps
        - cd book && mdbook build && cd ..
        - cp -r book/book/ target/doc/book/
        - travis-cargo doc-upload || true
    - name: "osx - stable rust - without gnuplot"
      os: osx
      rust: stable
    - name: "osx - stable rust - with gnuplot"
      os: osx
      rust: stable
      install: brew install gnuplot
    - name: "osx - nigthly rust - without gnuplot"
      os: osx
      rust: nightly
    - name: "osx - nightly rust - with gnuplot"
      os: osx
      rust: nightly
      install: brew install gnuplot

script:
  - cargo build $BUILD_ARGS --all --release
  - cargo test $BUILD_ARGS --all --release
  - cargo bench $BUILD_ARGS --all -- --test

env:
  global:
    - secure: "f/HaMzQu7d6ochSjE5lUjJbXYWlhbzslyTuWq+Lub/r2TTL4hVlT9koC4RT7W73V3WDrwYIqEGmwvscVffnijZRebl/PV+6WlOlYJEdAgKxGROpFGDIJGRGAc/f3s6OcJ+Hr8rmRF70fYEl45hs6J53X8s+CVRuty+r/UdilRpM="

notifications:
  email:
    on_success: never
